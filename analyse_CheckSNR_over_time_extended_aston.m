function analyse_CheckSNR_over_time_extended_aston
%20/12/19
%Written by Xing. Loads MUA and SNR data from .mat file (generated by
%analyse_CheckSNR2.m), during presentation of fullscreen flashing
%checkerboard stimuli to analyse signals for visually evoked responses.
%Plots measurements of SNR across time, for each channel.

allSNR=[];
xval=[];
dateLabels=[];
tally=[];
for dates=[1 4:7 9]%remove dates when two occur very close together
    topDir='X:\aston';
    switch(dates)
        case 1
            date='280818_B1_aston';
        case 2
            date='031018_B2_aston';
        case 3
            date='031018_B4_aston';
        case 4
            date='041018_B2_aston';
        case 5
            date='181218_B1_aston';
        case 6
            date='010319_B1_aston';
        case 7
            date='170419_B1_aston';
        case 8
            date='260419_B2_aston';%only instances 1 and 2
        case 9
            date='140819_B2_aston';
    end
    
    allInstanceInd=1:8;
    allSessionSNR=[];
    for instanceCount=1:length(allInstanceInd)
        instanceInd=allInstanceInd(instanceCount);
        instanceName=['instance',num2str(instanceInd)];
        clear channelSNR
        
        fileName=fullfile(topDir,date,['mean_MUA_',instanceName,'.mat']);
        load(fileName,'channelSNR');
        allSessionSNR=[allSessionSNR;channelSNR(1:128)'];%compile SNR values across recording sessions
    end
    allSNR=[allSNR allSessionSNR];
    formatIn = 'ddmmyy';
    xval=[xval datenum(date,formatIn)];
    dateLabels=[dateLabels cellstr(date(1:6))];
    tally=[tally length(find(allSessionSNR>=1))];
end
% saveFileName='D:\aston_data\results\allSNR_140819.mat';
% save(saveFileName,'allSNR','xval','dateLabels');

figure;
for chInd=1:size(allSNR,1)
    plot(xval,allSNR(chInd,:));
    hold on
end
xlabel('session')
ylabel('SNR');
title('SNRs on individual channels across time')
set(gca,'XTickLabels',dateLabels)
set(gca,'XTick',xval)
set(gca, 'FontSize', 8)
set(gca,'XTickLabelRotation',60)

figure;hold on
boxplot(allSNR,'positions',xval,'boxstyle','filled','labels',dateLabels);
set(gca, 'FontSize', 8)
set(gca,'XTickLabelRotation',60)
xlabel('date')
ylabel('SNR');
surgery=datenum('260718',formatIn);
xlim([surgery-5 xval(end)+5]);
plot([surgery surgery],[0 110],'r');
ylim([0 100])
lines = findobj(gcf, 'type', 'line', 'Tag', 'Median');
set(lines, 'Color', 'r','LineWidth',5);

for chInd=1:size(allSNR,1)
    meanCh(chInd)=mean(allSNR(chInd,:));
    stdCh(chInd)=std(allSNR(chInd,:));
    %     errorbar(1,meanCh,stdCh);
end

%tally of channels with SNR of at least 1
tally
figure;
b=bar(xval-surgery,tally,'FaceColor',[0.5 0.5 0.5],'EdgeColor',[0.5 0.5 0.5])
ylim([0 1024]);
set(gca,'YTick',[0 512 1024])
set(gca,'Box','off')
set(gca,'XTick',[0 200 400])
set(b,'BarWidth',0.05)

figure;hold on
surgery=datenum('260718',formatIn);
xvals=repmat(xval-surgery,[1024 1]);
scatter(xvals(:),allSNR(:),1,[0.5 0.5 0.5]);
meanSNR=mean(allSNR,1);
hold on
plot(xval-surgery,meanSNR,'k-');
mdl = fitlm(xval-surgery,meanSNR);
xVals=0:xval(end)-surgery;
yVals=xVals*-0.024468033983490+9.235785897997900;%as calculated and returned in dlm.Coefficients
plot(xVals,yVals,'b-');
xlabel('Days after implantation')
ylabel('SNR');
ylim([0 100])

%sort channels according to mean SNR value:
figure;
[meanChSorted indSort]=sort(meanCh);
stdChSorted=stdCh(indSort);
hErr=errorbar(1:length(meanChSorted),meanChSorted,stdChSorted);
% scatter(1:length(meanChSorted),meanChSorted);
xlabel('channel number, sorted')
ylabel('mean SNR & SD (uA)')
title('mean SNRs on individual channels, over 28/8/18 - 28/8/18')
xlim([0 1025])
ylim([0 70])

figure;
hErr=errorbar(1:length(meanCh),meanCh,stdCh);
% scatter(1:length(meanCh),meanCh);
xlabel('channel number')
ylabel('mean SNR & SD (uA)')
title('mean SNRs on individual channels, over 28/8/18 - 28/8/18')
xlim([0 1025])
ylim([0 70])

figure;%box plot for size of standard deviation
boxplot(stdChSorted);
title('size of standard deviation on individual channels, over 28/8/18 - 28/8/18')

%identify channels with large SD values:
largeSDchs=find(stdCh>10);
arrayNumsRedo=goodArrays8to16(largeSDchs,7)';
electrodeNumsRedo=goodArrays8to16(largeSDchs,8)';

%identify channels with a large difference between the two most recent values and/or where thresholding was only carried out once:
largeDiffChs=find(diffCh>2);
oneDatapointChs=find(diffCh==0);
largeDiffChs=union(largeDiffChs,oneDatapointChs);
arrayNumsRedo=goodArrays8to16(largeDiffChs,7)';
electrodeNumsRedo=goodArrays8to16(largeDiffChs,8)';

numSessionsPerGroup=2;
earlySessions=allSNR(:,1:numSessionsPerGroup);
lateSessions=allSNR(:,end-numSessionsPerGroup+1:end);
[h p ci stats]=ttest(earlySessions,lateSessions);
sprintf(['t(',num2str(stats.df),') = ',num2str(stats.tstat),', p = %.4f'],p)
groupAssignment=[earlySessions*0+1 lateSessions*0+2];
formattedGroupAssignment=groupAssignment(:);
earlyLateSessions=[earlySessions lateSessions];
formattedSessions=earlyLateSessions(:);
% [h p ci stats]=anovan(formattedSessions,formattedGroupAssignment);
[p table stats]=anova1(formattedSessions,formattedGroupAssignment);
dfBetween=table{2,3};
dfWithin=table{3,3};
Fstat=table{2,5};
sprintf(['F(',num2str(dfBetween),',',num2str(dfWithin),') = ',num2str(Fstat),', p = %.4f'],p)%F(1,4094) = 1326.8486, p = 0.0000
figure;
boxplot([earlySessions(:) lateSessions(:)]);

pause=1;