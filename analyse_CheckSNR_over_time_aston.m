function analyse_CheckSNR_over_time_aston
%28/8/18
%Written by Xing. Loads MUA and SNR data from .mat file (generated by
%analyse_CheckSNR2.m), during presentation of fullscreen flashing
%checkerboard stimuli to analyse signals for visually evoked responses.
%Plots measurements of SNR across time, for each channel.

allSNR=[];
xval=[];
dateLabels=[];
% for dates=[1:2 4 6 9 11:13 16:18 20:23 25:28]
for dates=[1]%remove dates when two occur very close together
    switch(dates)
        case 1
            date='280818_B1_aston';
            whichDir=2;
            best=0;
        case 2
        case 3
        case 4
        case 5
    end
    topDir='X:\aston';
    
    allInstanceInd=1:8;
    allSessionSNR=[];
    for instanceCount=1:length(allInstanceInd)
        instanceInd=allInstanceInd(instanceCount);
        instanceName=['instance',num2str(instanceInd)];
        clear channelSNR
        
        fileName=fullfile(topDir,date,['mean_MUA_',instanceName,'.mat']);
        load(fileName,'channelSNR');
        allSessionSNR=[allSessionSNR;channelSNR(1:128)'];%compile SNR values across recording sessions
    end
    allSNR=[allSNR allSessionSNR];
    formatIn = 'ddmmyy';
    xval=[xval datenum(date,formatIn)];
    dateLabels=[dateLabels cellstr(date(1:6))];
end
saveFileName='D:\aston_data\results\allSNR_280818.mat';
save(saveFileName,'allSNR');

figure;
for chInd=1:size(allSNR,1)
    plot(xval,allSNR(chInd,:));
    hold on
end
xlabel('session')
ylabel('SNR');
title('SNRs on individual channels across time')
set(gca,'XTickLabels',dateLabels)
set(gca,'XTick',xval)
set(gca, 'FontSize', 8)
set(gca,'XTickLabelRotation',60)

figure;hold on
boxplot(allSNR,'positions',xval,'boxstyle','filled','labels',dateLabels);
set(gca, 'FontSize', 8)
set(gca,'XTickLabelRotation',60)
xlabel('date')
ylabel('SNR');
surgery=datenum('260718',formatIn);
xlim([surgery-5 xval(end)+5]);
plot([surgery surgery],[0 110],'r');
ylim([0 100])
lines = findobj(gcf, 'type', 'line', 'Tag', 'Median');
set(lines, 'Color', 'r','LineWidth',5);

for chInd=1:size(allSNR,1)
    meanCh(chInd)=mean(allSNR(chInd,:));
    stdCh(chInd)=std(allSNR(chInd,:));
    %     errorbar(1,meanCh,stdCh);
end
%sort channels according to mean SNR value:
figure;
[meanChSorted indSort]=sort(meanCh);
stdChSorted=stdCh(indSort);
hErr=errorbar(1:length(meanChSorted),meanChSorted,stdChSorted);
% scatter(1:length(meanChSorted),meanChSorted);
xlabel('channel number, sorted')
ylabel('mean SNR & SD (uA)')
title('mean SNRs on individual channels, over 28/8/18 - 28/8/18')
xlim([0 1025])
ylim([0 70])

figure;
hErr=errorbar(1:length(meanCh),meanCh,stdCh);
% scatter(1:length(meanCh),meanCh);
xlabel('channel number')
ylabel('mean SNR & SD (uA)')
title('mean SNRs on individual channels, over 28/8/18 - 28/8/18')
xlim([0 1025])
ylim([0 70])

figure;%box plot for size of standard deviation
boxplot(stdChSorted);
title('size of standard deviation on individual channels, over 28/8/18 - 28/8/18')

%identify channels with large SD values:
largeSDchs=find(stdCh>10);
arrayNumsRedo=goodArrays8to16(largeSDchs,7)';
electrodeNumsRedo=goodArrays8to16(largeSDchs,8)';

%identify channels with a large difference between the two most recent values and/or where thresholding was only carried out once:
largeDiffChs=find(diffCh>2);
oneDatapointChs=find(diffCh==0);
largeDiffChs=union(largeDiffChs,oneDatapointChs);
arrayNumsRedo=goodArrays8to16(largeDiffChs,7)';
electrodeNumsRedo=goodArrays8to16(largeDiffChs,8)';

pause=1;